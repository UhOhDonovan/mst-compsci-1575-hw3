drb7fy REPORT 
********************************************
************************* NAME ************************
//Donovan Bale
#include <iostream>
using namespace std;

// -------------
// --------- Big 3 Member Functions ---
// -------------

// Purpose: Destructor
// Postconditions: All dynamically allocated Nodes are de-allocated
template<typename T>
LinkedList<T>::~LinkedList() {
  LLNode<T>* tmp;
********************** COMPILE ************************
************************  RUN   ************************
Hello World!!, This is the LinkedList KEY Tester
#1 Is the list empty? true [] Size of A = 0
#2 Insert: [10,9,8,7,6,5,4,3,2,1,] Size of a = 10
#3 Clear: [] Size of A = 0
#4 [24,22,20,18,16,14,12,10,8,6,4,2,0,] Size of a = 13
#5 Access: , First = 24, 5th = 14
#6 Clear: []
#7 [j,i,h,g,f,e,d,c,b,a,] Size of a = 10
#8 Insert @5, @7:  [j,i,h,g,f,w,e,w,d,c,b,a,]
#9 Rem @4, @8:  [j,i,h,g,w,e,w,d,b,a,]
#10 Find 'e': e has been found! e
#11 A = [40,30,20,10,0,] Size of A = 5
#12 B = [40,35,30,25,20,] Size of B = 5
#13 == :  A==B? false
#14 Op= : A = [40,30,20,10,0,] C = [40,30,20,10,0,] A==C? true
#15 DC? : A = [40,30,20,10,0,] C = [43,42,40,30,20,10,0,]
#16 CpyCon A = [40,30,20,10,0,] D = [40,30,20,10,0,] A==D? true
#17 DC?    A = [40,30,20,10,0,] D = [222,111,40,30,20,10,0,]
A = [22,20,18,16,14,12,10,] 7 ; B = [28,25,22,19,16,13,10,] 7
#18 Append : [22,20,18,16,14,12,10,28,25,22,19,16,13,10,]
#19 Reverse: [10,13,16,19,22,25,28,10,12,14,16,18,20,22,]
#20: Slice: C = [22,19,16,] 3
#21 : Empty return values: [] Size of A = 0 0x5608563280c0
#22 [99,88,77,66,55,44,33,22,11,0,] Size of A = 10
#23 : Returns on Invalid Index  !!! ERROR : PANIC in LINKEDLIST !!!
Index out of range, returning NULL
0
KEY Done!
************************  DIFF   ************************
23c23
< #21 : Empty return values: [] Size of A = 0 0x5608563280c0
---
> #21 : Empty return values: [ ] Size of A = 0 0
25,27c25
< #23 : Returns on Invalid Index  !!! ERROR : PANIC in LINKEDLIST !!!
< Index out of range, returning NULL
< 0
---
> #23 : Returns on Invalid Index  0
************************  VALGRIND   ************************
==17186== Memcheck, a memory error detector
==17186== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17186== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==17186== Command: ./execexec
==17186== 
==17186== 
==17186== HEAP SUMMARY:
==17186==     in use at exit: 0 bytes in 0 blocks
==17186==   total heap usage: 106 allocs, 106 frees, 78,464 bytes allocated
==17186== 
==17186== All heap blocks were freed -- no leaks are possible
==17186== 
==17186== For lists of detected and suppressed errors, rerun with: -s
==17186== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
**************************  Done! 
